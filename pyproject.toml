[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[tool.hatch.version]
path = 'devtools/version.py'

[project]
name = 'devtools'
description = "Python's missing debug print command, and more."
authors = [{name = 'Samuel Colvin', email = 's@muelcolvin.com'}]
license = {file = 'LICENSE'}
readme = 'README.md'
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'Intended Audience :: Education',
    'Intended Audience :: Information Technology',
    'Intended Audience :: Science/Research',
    'Intended Audience :: System Administrators',
    'Operating System :: Unix',
    'Operating System :: POSIX :: Linux',
    'Environment :: Console',
    'Environment :: MacOS X',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Internet',
    'Typing :: Typed',
]
requires-python = '>=3.7'
dependencies = [
    'executing>=1.1.1',
    'asttokens>=2.0.0,<3.0.0',
]
optional-dependencies = {pygments = ['Pygments>=2.2.0'] }
dynamic = ['version']

[project.urls]
Homepage = 'https://github.com/samuelcolvin/python-devtools'
Documentation = 'https://python-devtools.helpmanual.io'
Funding = 'https://github.com/sponsors/samuelcolvin'
Source = 'https://github.com/samuelcolvin/python-devtools'
Changelog = 'https://github.com/samuelcolvin/python-devtools/releases'

[project.entry-points.pytest11]
devtools = 'devtools.pytest_plugin'

[tool.pytest.ini_options]
testpaths = 'tests'
filterwarnings = 'error'

[tool.coverage.run]
source = ['devtools']
branch = true
omit = ['devtools/__main__.py']

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'raise NotImplemented',
    'if TYPE_CHECKING:',
    'if MYPY:',
    '@overload',
]

[tool.black]
color = true
line-length = 120
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
skip-string-normalization = true
extend-exclude = ['tests/test_expr_render.py']

[tool.ruff]
line-length = 120
exclude = ['cases_update']
extend-select = ['Q', 'RUF100', 'C90', 'UP', 'I']
flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}
mccabe = { max-complexity = 14 }
isort = { known-first-party = ['devtools'] }
target-version = 'py37'

[tool.mypy]
show_error_codes = true
strict = true
warn_return_any = false

[[tool.mypy.overrides]]
module = ['executing.*', 'pygments.*']
ignore_missing_imports = true
